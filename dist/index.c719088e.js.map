{"mappings":"AAAA,MAAM,WAAW,SAAS,iBAAiB;AAC3C,MAAM,cAAc,SAAS,iBAAiB;AAC9C,MAAM,eAAe,SAAS,iBAAiB;AAE/C,MAAM,iBAAiB,SAAS,cAAc;AAC9C,MAAM,oBAAoB,SAAS,cAAc;AACjD,MAAM,oBAAoB,SAAS,iBAAiB;AACpD,MAAM,gBAAgB,SAAS,cAAc;AAG7C,MAAM,eAAe,SAAS,iBAAiB;AAC/C,MAAM,gBAAgB,SAAS,cAAc;AAC7C,MAAM,cAAc,SAAS,cAAc;AAE3C,MAAM,WAAW,SAAS,cAAc;AACxC,MAAM,gBAAgB,SAAS,cAAc;AAC7C,MAAM,kBAAkB;OAAI,SAAS,iBAAiB;CAAgB;AACtE,MAAM,eAAe,SAAS,cAAc;AAI5C,aAAa,QAAQ,CAAC;IAClB,SAAS,iBAAiB,SAAS;QAC/B,IAAI,SAAS,OAAO,cAAc;YAC9B,cAAc,MAAM,UAAU,SAAS,UAAU,UAAU;YAC3D,cAAc,iBAAiB,cAAc,SAAS,UAAU,QAAQ;YACxE;QACJ,OAAO,IAAI,SAAS,OAAO,YAAY;YACnC,YAAY,MAAM,UAAU,SAAS,UAAU,UAAU;YACzD,YAAY,iBAAiB,cAAc,SAAS,UAAS,OAAO;YACpE;QACJ;IACJ;AACJ;AAEA,cAAc,iBAAiB,SAAS;IACpC,SAAS,MAAM,UAAU;AAC7B;AAGA,eAAe,iBAAiB,SAAS;IACrC,kBAAkB,MAAM,UAAU;AACtC;AAIA,kBAAkB,QAAQ,CAAC,QAAQ;IAC/B,qDAAqD;IACrD,OAAO,iBAAiB,SAAS;QAC7B,kBAAkB,MAAM,UAAU;QAClC,cAAc,MAAM,UAAU;QAC9B,eAAe,cAAc;QAC7B,eAAe,MAAM,QAAQ;QAC7B,cAAc,iBAAiB,cAAc,cAAc,iBAAiB,WAAW,OAAO;QAC9F;IACJ;AACJ;AAGA,SAAS,sBAAsB,KAAK,EAAE,KAAK,EAAE,YAAY;IACrD,MAAM,aAAa,QAAQ;IAC3B,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,MAAM,IAAI,EAAE,aAAa,CAAC;IAC/D,WAAW,CAAC,MAAM,CAAC,iBAAiB,cAAc,CAAC,CAAC,EAAE,WAAW,QAAQ,GAAG,CAAC;IAEjF,iEAAiE;IAC7D,eAAe,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AAChD;AAEA,SAAS,QAAQ,CAAC,OAAO;IACrB,MAAM,aAAa,WAAW,CAAC,MAAM;IACrC,MAAM,cAAc,YAAY,CAAC,MAAM;IAEvC,MAAM,iBAAiB,QAAQ;QAC3B,IAAI,QAAQ,SAAS,MAAM;QAC3B,IAAI,OAAO,UAAU,UAAU,SAAS,GAAG;YACvC,IAAI;YACJ,IAAI,MAAM,OAAO,YACb,eAAe;iBACZ,IAAI,MAAM,OAAO,UACpB,eAAe;YAEnB,WAAW,MAAM,UAAU;YAC3B,sBAAsB,OAAO,OAAO;YACpC;QAEJ,OAAO;YACH,QAAQ,IAAI;YACZ,WAAW,MAAM,UAAU;QAC3B,iCAAiC;QACjC,oBAAoB;QAExB;IACJ;AACJ;AAGA,qCAAqC;AACrC,SAAS;IACL,gBAAgB,QAAQ,CAAA;QACpB,iBAAiB,cAAc;IAC/B,mCAAmC;IACvC;AACJ;AAEA,0DAA0D;AAC1D;AAEA,SAAS;IACL,MAAM,MAAM,gBAAgB,OAAO,CAAC,OAAO;QACvC,MAAM,QAAQ,WAAW,KAAK,YAAY,QAAQ,KAAK;QACvD,OAAO,QAAQ;IACnB,GAAG;IAEH,aAAa,cAAc,CAAC,CAAC,EAAE,IAAI,QAAQ,GAAG,CAAC;AACnD;AACA,iBAEA,8BAA8B;CAC9B,+FAA+F;CAC/F,8EAA8E;CAC9E,uCAAuC;CACvC,2DAA2D;CAC3D,EAAE;CACF,IAAI","sources":["src/scripts/app.js"],"sourcesContent":["const inputRef = document.querySelectorAll(\".form__input\");\nconst rowItemRefs = document.querySelectorAll('.list__item');\nconst itemCalcRefs = document.querySelectorAll('.item__calc');\n\nconst selectInputRef = document.querySelector(\".select__input\");\nconst selectDropDownRef = document.querySelector(\".select__dropdown\");\nconst selectPackageRefs = document.querySelectorAll('li[data-value]');\nconst rowPackageRef = document.querySelector(\"[data-id='package']\");\n\n\nconst checkboxRefs = document.querySelectorAll('[type=\"checkbox\"]');\nconst accountingRef = document.querySelector(\"[data-id='accounting']\");\nconst terminalRef = document.querySelector(\"[data-id='terminal']\");\n\nconst totalRef = document.querySelector(\"#total-price\");\nconst allSectionRef = document.querySelector(\".calc\");\nconst totalPricesRefs = [...document.querySelectorAll('.item__price')];\nconst textTotalRef = document.querySelector(\".total__price\");\n\n\n\ncheckboxRefs.forEach((checkbox) => {\n    checkbox.addEventListener(\"click\", function () {\n        if (checkbox.id === \"accounting\") {\n            accountingRef.style.display = checkbox.checked ? \"block\" : \"none\";\n            accountingRef.lastElementChild.textContent = checkbox.checked ? \"$35\" : \"$0\";\n            calculateTotal();\n        } else if (checkbox.id === \"terminal\") {\n            terminalRef.style.display = checkbox.checked ? \"block\" : \"none\";\n            terminalRef.lastElementChild.textContent = checkbox.checked ?\"$5\" : \"$0\";\n            calculateTotal();\n        }\n    })\n})\n\nallSectionRef.addEventListener(\"click\", function () {\n    totalRef.style.display = \"block\";\n})\n\n\nselectInputRef.addEventListener(\"click\", function () {\n    selectDropDownRef.style.display = \"block\";\n})\n\n\n\nselectPackageRefs.forEach((select, index) => {\n    // const selectPackageRef = selectPackageRefs[index];\n    select.addEventListener(\"click\", function () {\n        selectDropDownRef.style.display = \"none\";\n        rowPackageRef.style.display = \"block\";\n        selectInputRef.textContent = \"Premium\";\n        selectInputRef.style.color = \"black\";\n        rowPackageRef.lastElementChild.textContent = rowPackageRef.lastElementChild.selected ? \"$0\" : \"$60\";\n        calculateTotal()\n    })\n})\n\n\nfunction updateProductQuantity(index, value, pricePerItem) {\n    const totalValue = value * pricePerItem;\n    itemCalcRefs[index].textContent = `${value} * $${pricePerItem}`;\n    rowItemRefs[index].lastElementChild.textContent = `$${totalValue.toFixed(2)}`;\n\n// Update totalPricesRefs array with the new item__price elements\n    totalPricesRefs[index] = rowItemRefs[index].lastElementChild;\n}\n\ninputRef.forEach((input, index) => {\n    const rowItemRef = rowItemRefs[index];\n    const itemCalcRef = itemCalcRefs[index];\n\n    input.addEventListener('blur', function () {\n        let value = parseInt(input.value);\n        if (Number.isInteger(value) && value >= 1) {\n            let pricePerItem;\n            if (input.id === \"products\") {\n                pricePerItem = 0.5;\n            } else if (input.id === \"orders\") {\n                pricePerItem = 0.25;\n            }\n            rowItemRef.style.display = \"block\";\n            updateProductQuantity(index, value, pricePerItem);\n            calculateTotal();\n\n        } else {\n            console.log(\"wprowadź liczby całkowite dodatnie\");\n            rowItemRef.style.display = \"none\";\n            // rowItemRef.textContent = \"$0\";\n            // calculateTotal();\n\n        }\n    });\n});\n\n\n// Function to reset the prices to $0\nfunction resetPricesToZero() {\n    totalPricesRefs.forEach(itemPriceElement => {\n        itemPriceElement.textContent = \"$0\";\n        // textTotalRef.textContent = \"$0\";\n    });\n}\n\n// Call the resetPricesToZero function to reset the prices\nresetPricesToZero();\n\nfunction calculateTotal() {\n    const sum = totalPricesRefs.reduce((total, item) => {\n        const price = parseFloat(item.textContent.replace('$', ''));\n        return total + price;\n    }, 0);\n\n    textTotalRef.textContent = `$${sum.toFixed(2)}`;\n}\ncalculateTotal()\n\n// function calculateTotal() {\n//     const sum = totalPricesRefs.reduce((totalPricesRefs, item) => totalPricesRefs+ item, 0);\n//             // const price = parseFloat(item.textContent.replace('$', ''));\n//             // return total + price;\n//         textTotalRef.textContent = `$${sum.toFixed(2)}`;\n//\n// }\n"],"names":[],"version":3,"file":"index.c719088e.js.map","sourceRoot":"/__parcel_source_root/"}